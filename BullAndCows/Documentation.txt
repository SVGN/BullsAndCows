- Преименувахме проекта от KPK_DOMASHNO на BullAndCows
- Форматирахме кода, чрез премахване на излишните празни редове, добавяне на нужни празни редове, добавяне на скоби където 
трябва, преименуване на променливи и методи.

// ScoreBoard.cs
- Отделихме ScoreBoard методите и полетата в друг отделен клас (ScoreBoard.cs)
- Добавихме константа PlayersToShow, за запазване броя на играчите, които да се показват в класирането.
- Премахнахме tryAddToScoreboard() метода, тъй като вече запазваме всички резултати, но показваме толкова колкото пише в константата PlayersToShow
- Добавихме нов метод AddPlayer() за добавяне на играч в класирането
- Добавихме нов метод Show(), който ще замени DisplayTop() метода, за показване на класирането
- Заменихме klasirane полето, който беше от тип SortedList<string, int> с ranking, като вече типа му е List<Player>
- Добавихме нов метод SortRanking(), за да може да сортираме списъка с играчите, метода се извиква всеки път, когато е добавен нов играч.

// Command.cs
- Добавихме енумерация за командите в играта (Command.cs)

// Player.cs
- Създадохме нов клас Player.cs, който ще държи информацията за играчите в играта.
- Player класа ще имплементира интерфейса IComparable<>
- Добавихме две полета/свойства: Name и Attemps
- Добавихме конструктор с две параметри: name и attemps
- Пренаписахме ToString() метода
- Имплементирахме CompareTo() метода, за да можем да сравним 2 играча. Сравнението става по Attemps

// ConsolePrinter.cs
- Създадохме нов клас, който принтира всички съобщения на конзолата.

// IPrinter.cs
- Интерфейс, който се имплементира от ConsolePrinter

// GameEngine.cs
- Създадохме нов клас GameEngine, който управлява играта и имплементира логиката и:
  - Използва ConsolePrinter, когато трябва да печата на конзолата.
  - Използва Generator за генериране на тайното число.
  - Съдържа обект от ScoreBoard, в който добавя всички резутати.
  - Чете команди от конзолата, за които извършва съответните операции.

// Generator.cs
- Създадохме нов клас Generator, който се генерира тези елементи от играта, които трябва да са произволни.
- SecretNumber() - генерира произволно n-цифрено число (в играта: 4-цифрено).
- HelpIndex() - Избира произволен индекс от числото.
- HelpNumber() - Връща стринг с разкрита една цифра от числото.

// Добавихме XML документация на всички публични класове, енумерации, методи, свойства и интерфейси в проекта.